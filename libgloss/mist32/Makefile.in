# Makefile for libgloss/mist32
# Copyright (c) 2012-2013 Hirotaka Kawata <hirotaka@techno-st.net>
#
# The authors hereby grant permission to use, copy, modify, distribute,
# and license this software and its documentation for any purpose, provided
# that existing copyright notices are retained in all copies and that this
# notice is included verbatim in any distributions. No written agreement,
# license, or royalty fee is required for any of the authorized uses.
# Modifications to this software may be copyrighted by their authors
# and need not follow the licensing terms described here, provided that
# the new terms are clearly indicated on the first page of each file where
# they apply.

DESTDIR =
VPATH = @srcdir@ @srcdir@/..
srcdir = @srcdir@
objdir = .
srcroot = $(srcdir)/../..
objroot = $(objdir)/../..

prefix = @prefix@
exec_prefix = @exec_prefix@

host_alias = @host_alias@
target_alias = @target_alias@

bindir = @bindir@
libdir = @libdir@
tooldir = $(exec_prefix)/$(target_alias)

# Multilib support variables.
# TOP is used instead of MULTI{BUILD,SRC}TOP.
MULTIDIRS =
MULTISUBDIR =
MULTIDO = true
MULTICLEAN = true

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@

SHELL = /bin/sh

CC = @CC@

AS = @AS@
AR = @AR@
LD = @LD@
RANLIB = @RANLIB@
AR_FLAGS = qv

OBJDUMP = `if [ -f ${objroot}/../binutils/objdump ] ; \
	then echo ${objroot}/../binutils/objdump ; \
	else t='$(program_transform_name)'; echo objdump | sed -e $$t ; fi`
OBJCOPY = `if [ -f ${objroot}/../binutils/objcopy ] ; \
	then echo ${objroot}/../binutils/objcopy ; \
	else t='$(program_transform_name)'; echo objcopy | sed -e $$t ; fi`

LD_SCRIPTS = mist32-elf-common.ld

CRT0 = crt0.o
BSP = libmist32.a
OBJS = 	close.o		\
	fstat.o		\
	getpid.o	\
	isatty.o	\
	kill.o		\
	lseek.o		\
	open.o		\
	read.o		\
	sbrk.o		\
	stat.o		\
	unlink.o	\
	times.o		\
	write.o		\
	trap0.o		\
	_exit.o

# Host specific makefile fragment comes in here.
@host_makefile_frag@

all: $(CRT0) $(BSP)

$(BSP): $(OBJS)
	$(AR) $(ARFLAGS) $@ $?
	$(RANLIB) $@

crt0.o: crt0.S
close.o: close.c
fstat.o: fstat.c
getpid.o: getpid.c
isatty.o: isatty.c
kill.o: kill.c
lseek.o: lseek.c
open.o: open.c
read.o: read.c
sbrk.o: sbrk.c
stat.o: stat.c
unlink.o: unlink.c
time.o: time.c
write.o: write.c
trap0.o: trap0.S
_exit.o: _exit.c

install: $($(CPU)_INSTALL)
	$(INSTALL_DATA) $(CRT0) $(DESTDIR)$(tooldir)/lib${MULTISUBDIR}/$(CRT0)
	$(INSTALL_DATA) $(BSP) $(DESTDIR)$(tooldir)/lib${MULTISUBDIR}/$(BSP)
	for x in ${LD_SCRIPTS}; do \
	  ${INSTALL_DATA} ${srcdir}/$$x $(DESTDIR)${tooldir}/lib/$$x; \
	done;

clean mostlyclean:
	rm -f *.o *.a

distclean maintainer-clean realclean: clean
	rm -f Makefile config.cache config.log config.status

.PHONY: info dvi doc install-info clean-info
info doc dvi:
install-info:
clean-info:

Makefile: Makefile.in config.status @host_makefile_frag_path@
	$(SHELL) config.status

config.status: configure
	$(SHELL) config.status --recheck
